name: CI/CD Pipeline

on:
    push:
        branches: [main, master, development]
    pull_request:
        branches: [main, master, development]

jobs:
    install-dependencies:
        name: Install dependencies
        runs-on: ubuntu-latest
        outputs:
            cache-hit: ${{ steps.cache-node-modules.outputs.cache-hit }}
        steps:
            - uses: actions/checkout@v4

            - uses: actions/setup-node@v4
              with:
                  node-version: lts/*

            - name: Cache node modules
              id: cache-node-modules
              uses: actions/cache@v4
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

            - name: Install dependencies
              run: npm ci

    lint:
        name: Lint and Prettier
        runs-on: ubuntu-latest
        needs: install-dependencies

        steps:
            - uses: actions/checkout@v4

            - uses: actions/setup-node@v4
              with:
                  node-version: lts/*

            - name: Restore node modules cache
              uses: actions/cache@v4
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

            - name: Install dependencies
              run: npm ci

            - name: Check Prettier
              run: npx prettier --write .

            - name: Run ESLint
              run: npx eslint . --ext .js,.jsx,.ts,.tsx

    tests:
        name: Unit Tests
        runs-on: ubuntu-latest
        needs: install-dependencies

        steps:
            - uses: actions/checkout@v4

            - uses: actions/setup-node@v4
              with:
                  node-version: lts/*

            - name: Restore node modules cache
              uses: actions/cache@v4
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

            - name: Install dependencies
              run: npm ci

            - name: Run unit tests
              run: npm test

    playwright-tests:
        name: E2E Tests
        runs-on: ubuntu-latest
        needs: tests
        timeout-minutes: 60

        steps:
            - uses: actions/checkout@v4

            - uses: actions/setup-node@v4
              with:
                  node-version: lts/*

            - name: Install dependencies
              run: npm ci

            - name: Install Playwright Browsers
              run: npx playwright install --with-deps

            - name: Run Playwright tests
              run: npx playwright test

            - uses: actions/upload-artifact@v4
              if: ${{ !cancelled() }}
              with:
                  name: playwright-report
                  path: playwright-report/
                  retention-days: 30

    deploy:
        name: Deploy to GitHub Pages
        runs-on: ubuntu-latest
        needs: playwright-tests
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'

        steps:
            - uses: actions/checkout@v4

            - uses: actions/setup-node@v4
              with:
                  node-version: lts/*

            - name: Install dependencies
              run: npm ci

            - name: Build project
              run: npm run build

            - name: Deploy to GitHub Pages
              uses: peaceiris/actions-gh-pages@v4
              with:
                  github_token: ${{ secrets.GITHUB_TOKEN }}
                  publish_dir: ./build
